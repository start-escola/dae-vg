version: "3"
services:
  strapi:
    container_name: strapi
    build: 
      context: ./dae-vg-api
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: db
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
    volumes:
      - ./dae-vg-api/config:/opt/app/config
      - ./dae-vg-api/src:/opt/app/src
      - ./dae-vg-api/package.json:/opt/package.json
      - ./dae-vg-api/yarn.lock:/opt/yarn.lock
      - ./dae-vg-api/.env:/opt/app/.env
      - ./dae-vg-api/public/uploads:/opt/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - strapi
    depends_on:
      - db

  db:
    container_name: db
    platform: linux/amd64
    restart: unless-stopped
    env_file: .env
    image: postgres:12.0-alpine
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - strapi-data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    networks:
      - strapi

  nextjs:
    container_name: nextjs
    env_file: .env
    build: 
      context: ./dae-vg-client
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    ports:
      - "3000:3000"
    networks:
      - strapi

  nginx:
    container_name: nginx
    build: ./nginx
    ports:
      - 443:443
    env_file:
      - .env
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
    - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
    - /etc/letsencrypt:/etc/letsencrypt
    - ./data/certbot/conf:/etc/letsencrypt
    - ./data/certbot/www:/var/www/certbot
    depends_on:
      - nextjs
      - strapi
    networks:
      - strap

    certbot:
      image: certbot/certbot
      volumes:
        - ./data/certbot/conf:/etc/letsencrypt
        - ./data/certbot/www:/var/www/certbot
      entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  strapi-data:

networks:
  strapi:
    name: Strapi
    driver: bridge
